<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Richard&#39;s blog</title>
    <link>https://richard-chen93.github.io/post/</link>
    <description>Recent content in Posts on Richard&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 30 Oct 2020 09:00:58 +0800</lastBuildDate><atom:link href="https://richard-chen93.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>各种阿里云加速器</title>
      <link>https://richard-chen93.github.io/post/%E5%90%84%E7%A7%8D%E9%98%BF%E9%87%8C%E4%BA%91%E5%8A%A0%E9%80%9F%E5%99%A8/</link>
      <pubDate>Fri, 30 Oct 2020 09:00:58 +0800</pubDate>
      
      <guid>https://richard-chen93.github.io/post/%E5%90%84%E7%A7%8D%E9%98%BF%E9%87%8C%E4%BA%91%E5%8A%A0%E9%80%9F%E5%99%A8/</guid>
      <description>yum centos7: wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo sed -i -e &#39;/mirrors.cloud.aliyuncs.com/d&#39; -e &#39;/mirrors.aliyuncs.com/d&#39; /etc/yum.repos.d/CentOS-Base.repo yum makecache pip: pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ pip install django-bootstrap3==6.2.2 -i http://mirrors.aliyun.com/pypi/simple --trusted-host=mirrors.aliyun.com Mac: 修改 pip.conf 文件 vim $HOME/Library/Application Support/pip/pip.conf 如果没有上面的目录,在如下目录创建 pip.conf $HOME/.config/pip/pip.conf 修改内容如下： [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple12 Windows: 修改 pip.conf 文件 (没有就创建一个) %APPDATA%\pip\pip.ini 修改内容如下： [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple docker：</description>
    </item>
    
    <item>
      <title>Ssh</title>
      <link>https://richard-chen93.github.io/post/ssh/</link>
      <pubDate>Thu, 29 Oct 2020 18:43:21 +0800</pubDate>
      
      <guid>https://richard-chen93.github.io/post/ssh/</guid>
      <description>linux更改 ssh 私钥 Passphrase $ cd ~/.ssh $ ssh-keygen -f id_rsa -p</description>
    </item>
    
    <item>
      <title>Docker Compose</title>
      <link>https://richard-chen93.github.io/post/docker-compose%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 29 Oct 2020 18:40:08 +0800</pubDate>
      
      <guid>https://richard-chen93.github.io/post/docker-compose%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</guid>
      <description>docker-compose 1.安装扩展源 sudo yum -y install epel-release 2.安装python-pip模块 sudo yum install python-pip 3.查看docker-compose版本 docker-compose version 提示未找到命令 4.通过命令进行安装 cd /usr/local/bin/ wget https://github.com/docker/compose/releases/download/1.14.0-rc2/docker-compose-Linux-x86_64 rename docker-compose-Linux-x86_64 docker-compose docker-compose-Linux-x86_64 chmod +x /usr/local/bin/docker-compose 5.再通过docker-compo</description>
    </item>
    
    <item>
      <title>git Submodule</title>
      <link>https://richard-chen93.github.io/post/submodule%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 29 Oct 2020 17:48:08 +0800</pubDate>
      
      <guid>https://richard-chen93.github.io/post/submodule%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</guid>
      <description>Git中submodule的使用 面对比较复杂的项目，我们有可能会将代码根据功能拆解成不同的子模块。主项目对子模块有依赖关系，却又并不关心子模块的内部开发流程细节。 这种情况下，通常不会把所有源码都放在同</description>
    </item>
    
    <item>
      <title>Hugo基本用法</title>
      <link>https://richard-chen93.github.io/post/hugo%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</link>
      <pubDate>Wed, 28 Oct 2020 10:29:18 +0800</pubDate>
      
      <guid>https://richard-chen93.github.io/post/hugo%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</guid>
      <description>hugo本地创建、更新、删除文章后同步到gitpage的基本流程： 前提环境： public目录位于blog目录下，属于blog的子仓库submodule 使用命令 git submodule status可看到 注意 写文章后直接sh</description>
    </item>
    
    <item>
      <title>Deploy Hugo Site_on Github Pages</title>
      <link>https://richard-chen93.github.io/post/deploy-hugo-site_on-github-pages/</link>
      <pubDate>Tue, 27 Oct 2020 18:16:10 +0800</pubDate>
      
      <guid>https://richard-chen93.github.io/post/deploy-hugo-site_on-github-pages/</guid>
      <description>将hugo静态博客网页部署到github上 1、选择gitpage的类型 2种github page：个人、项目。这里选个人。 2、建立gitpage和hugo代码仓库 在github上以自己的用户名+gith</description>
    </item>
    
    <item>
      <title>Git常见错误汇总</title>
      <link>https://richard-chen93.github.io/post/git%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E6%B1%87%E6%80%BB/</link>
      <pubDate>Tue, 27 Oct 2020 18:15:05 +0800</pubDate>
      
      <guid>https://richard-chen93.github.io/post/git%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E6%B1%87%E6%80%BB/</guid>
      <description>1 无法push A git directory for &amp;lsquo;public&amp;rsquo; is found locally with remote(s): origin https://github.com/richard-chen93/.........git If you want to reuse this local git directory instead of cloning again from https://github.com/richard-chen93/......git use the &amp;lsquo;&amp;ndash;force&amp;rsquo; option. If the local git directory is not the correct repo or you are unsure what this means choose another name with the &amp;lsquo;&amp;ndash;name&amp;rsquo; option. 删除.git\modules 的 public 2 git push时总让输入密码 git push的时候每</description>
    </item>
    
    <item>
      <title>Puppet</title>
      <link>https://richard-chen93.github.io/post/puppet/</link>
      <pubDate>Tue, 27 Oct 2020 17:28:54 +0800</pubDate>
      
      <guid>https://richard-chen93.github.io/post/puppet/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Markdown Syntax</title>
      <link>https://richard-chen93.github.io/post/markdown-syntax/</link>
      <pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://richard-chen93.github.io/post/markdown-syntax/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;
&lt;h2 id=&#34;headings&#34;&gt;Headings&lt;/h2&gt;
&lt;p&gt;The following HTML &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;—&lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt; elements represent six levels of section headings. &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; is the highest section level while &lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt; is the lowest.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Math Typesetting</title>
      <link>https://richard-chen93.github.io/post/math-typesetting/</link>
      <pubDate>Sun, 08 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://richard-chen93.github.io/post/math-typesetting/</guid>
      <description>&lt;p&gt;Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.&lt;/p&gt;
&lt;p&gt;In this example we will be using &lt;a href=&#34;https://katex.org/&#34; target=&#34;_blank&#34;&gt;KaTeX&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a partial under &lt;code&gt;/layouts/partials/math.html&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Within this partial reference the &lt;a href=&#34;https://katex.org/docs/autorender.html&#34; target=&#34;_blank&#34;&gt;Auto-render Extension&lt;/a&gt; or host these scripts locally.&lt;/li&gt;
&lt;li&gt;Include the partial in your templates like so:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;{{ if or .Params.math .Site.Params.math }}
{{ partial &amp;quot;math.html&amp;quot; . }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;To enable KaTex globally set the parameter &lt;code&gt;math&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in a project&amp;rsquo;s configuration&lt;/li&gt;
&lt;li&gt;To enable KaTex on a per page basis include the parameter &lt;code&gt;math: true&lt;/code&gt; in content files.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Placeholder Text</title>
      <link>https://richard-chen93.github.io/post/placeholder-text/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://richard-chen93.github.io/post/placeholder-text/</guid>
      <description>&lt;p&gt;Lorem est tota propiore conpellat pectoribus de
pectora summo. Redit teque digerit hominumque toris verebor lumina non cervice
subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc
caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis
lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emoji Support</title>
      <link>https://richard-chen93.github.io/post/emoji-support/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://richard-chen93.github.io/post/emoji-support/</guid>
      <description>&lt;p&gt;Emoji can be enabled in a Hugo project in a number of ways.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://gohugo.io/functions/emojify/&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;emojify&lt;/code&gt;&lt;/a&gt; function can be called directly in templates or &lt;a href=&#34;https://gohugo.io/templates/shortcode-templates/#inline-shortcodes&#34; target=&#34;_blank&#34;&gt;Inline Shortcodes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To enable emoji globally, set &lt;code&gt;enableEmoji&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in your site’s &lt;a href=&#34;https://gohugo.io/getting-started/configuration/&#34; target=&#34;_blank&#34;&gt;configuration&lt;/a&gt; and then you can type emoji shorthand codes directly in content files; e.g.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:s ee_no_evil:[Remove the space]&lt;/code&gt; 🙈 &lt;code&gt;:h ear_no_evil:[Remove the space]&lt;/code&gt; 🙉 &lt;code&gt;:s peak_no_evil:[Remove the space]&lt;/code&gt; 🙊&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CJK Unicode Test</title>
      <link>https://richard-chen93.github.io/post/cjk-unicode-test/</link>
      <pubDate>Fri, 09 Mar 2018 00:00:00 +0800</pubDate>
      
      <guid>https://richard-chen93.github.io/post/cjk-unicode-test/</guid>
      <description>&lt;p&gt;The following is part of the CJK text, this page is for test use only.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>纯简体中文测试文章</title>
      <link>https://richard-chen93.github.io/post/wtf-article/</link>
      <pubDate>Sat, 01 Apr 2017 00:00:00 +0800</pubDate>
      
      <guid>https://richard-chen93.github.io/post/wtf-article/</guid>
      <description>&lt;p&gt;本文内容无实际意义，由狗屁不通文章生成器自动生成，不代表作者本人观点。&lt;/p&gt;
&lt;p&gt;可是，即使是这样，一段代码写一天的出现仍然代表了一定的意义。一段代码写一天，到底应该如何实现。马克思在不经意间这样说过，一切节省，归根到底都归结为时间的节省。这不禁令我深思。马克思曾经说过，一切节省，归根到底都归结为时间的节省。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
